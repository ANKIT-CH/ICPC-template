Knuth's optimisation:
+ mostly used in dp[l][r] (dp interval on array)
+ O(n^3) ---> O(n^2)
+ dp formula must be: dp[i][j] = min_{k=i+1}^{j-1}(dp[i][k] + dp[k][j]) + C[i][j]
+ A[i][j] = smallest k, which dp[i][j] = dp[i][k] + dp[k][j] + C[i][j] (k is one of answers)
+ Conditions:
	- A[i][j-1] <= A[i][j] <= A[i+1][j]
	- (a<=b<=c<=d)
	- C[a][c] + C[b][d] <= C[a][d] + C[b][c]
	- C[b][c] <= C[a][d]

Phi:
+ phi(n) = Number of 1<=k<=n which gcd(k, n) == 1
+ phi(n) = n * (1 - 1/p1) * (1 - 1/p2) * ... (1 - 1/pt)
+ sum_(d|n) (phi(d)) = n
+ Properties:
	- a|b ==> phi(a)|phi(b)
	- phi(n*m) = phi(m) * phi(n) * d/phi(d) where d = gcd(n, m)
 